#!/usr/bin/env ruby
require 'trollop'
require 'cfn-nag'
require 'logging'
require 'json'

opts = Trollop::options do
  usage '[options] <cloudformation template path ...>|<cloudformation template in STDIN>'

  opt :debug, 'Enable debug output', type: :boolean, required: false, default: false
  opt :rule_directory, 'Extra rule directory', type: :io, required: false, default: nil
  opt :profile_path, 'Path to a profile file', type: :io, required: false, default: nil
end

CfnNag::configure_logging(opts)

profile_definition = nil
unless opts[:profile_path].nil?
  profile_definition = IO.read(opts[:profile_path])
end

cfn_nag = CfnNag.new(profile_definition: profile_definition,
                     rule_directory: opts[:rule_directory])

# trollop appears to pop args off of ARGV
# ARGF concatenates which we don't want
if ARGV.size == 0
  results = cfn_nag.audit(cloudformation_string: STDIN.read)

  results[:violations] = results[:violations].map { |violation| violation.to_h }
  puts JSON.pretty_generate(results)
  exit results[:failure_count]
else
  total_failure_count = 0
  ARGV.each do |file_name|
    results = cfn_nag.audit(cloudformation_string: IO.read(file_name))

    total_failure_count += results[:failure_count]
    results[:violations] = results[:violations].map { |violation| violation.to_h }
    puts JSON.pretty_generate(results)
  end
  exit total_failure_count
end

